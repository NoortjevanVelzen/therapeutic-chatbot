{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20184080\\\\OneDrive - TU Eindhoven\\\\Documents\\\\2. Industrial Design\\\\Final Master Project\\\\therapeutic-chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from \"react\";\nimport HomePage from \"./components/HomePage\";\nimport SocialMediaFeed from \"./components/SocialMediaScreen\"; // or wherever your feed component lives\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // `started` is false at first → we show <HomePage/>.\n  // Once the user clicks “Get Started”, we flip started = true and show the feed.\n  const [started, setStarted] = useState(false);\n\n  // If you want to pass `userInput` down into SocialMediaFeed, you can adjust accordingly.\n  // In this example, we’ll just render the feed with no user‐typed mood at first.\n  const [userInput, setUserInput] = useState(\"\");\n  if (!started) {\n    // Show the Home page until the user clicks “Get Started”\n    return /*#__PURE__*/_jsxDEV(HomePage, {\n      onGetStarted: () => setStarted(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Once started === true, show the SocialMediaFeed\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SocialMediaFeed, {\n      userInput: userInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aYdTpNy1/ck81NKog5FjJcO2zYM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","HomePage","SocialMediaFeed","jsxDEV","_jsxDEV","App","_s","started","setStarted","userInput","setUserInput","onGetStarted","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/20184080/OneDrive - TU Eindhoven/Documents/2. Industrial Design/Final Master Project/therapeutic-chatbot/frontend/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from \"react\";\nimport HomePage from \"./components/HomePage\";\nimport SocialMediaFeed from \"./components/SocialMediaScreen\"; // or wherever your feed component lives\n\nexport default function App() {\n  // `started` is false at first → we show <HomePage/>.\n  // Once the user clicks “Get Started”, we flip started = true and show the feed.\n  const [started, setStarted] = useState(false);\n\n  // If you want to pass `userInput` down into SocialMediaFeed, you can adjust accordingly.\n  // In this example, we’ll just render the feed with no user‐typed mood at first.\n  const [userInput, setUserInput] = useState(\"\");\n\n  if (!started) {\n    // Show the Home page until the user clicks “Get Started”\n    return <HomePage onGetStarted={() => setStarted(true)} />;\n  }\n\n  // Once started === true, show the SocialMediaFeed\n  return (\n    <div>\n      {/* \n        If you still want the “input box” to live in App.js and pass it down, you could do:\n        <div style={{ textAlign: \"center\", marginTop: 30 }}>\n          <input\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"How are you feeling today?\"\n            style={{\n              fontSize: 18,\n              padding: 10,\n              borderRadius: 6,\n              border: \"1px solid #ccc\",\n              width: 320,\n            }}\n          />\n        </div>\n      */}\n      <SocialMediaFeed userInput={userInput} />\n    </div>\n  );\n}"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA;EACA,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,IAAI,CAACO,OAAO,EAAE;IACZ;IACA,oBAAOH,OAAA,CAACH,QAAQ;MAACU,YAAY,EAAEA,CAAA,KAAMH,UAAU,CAAC,IAAI;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3D;;EAEA;EACA,oBACEX,OAAA;IAAAY,QAAA,eAkBEZ,OAAA,CAACF,eAAe;MAACO,SAAS,EAAEA;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV;AAACT,EAAA,CArCuBD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}