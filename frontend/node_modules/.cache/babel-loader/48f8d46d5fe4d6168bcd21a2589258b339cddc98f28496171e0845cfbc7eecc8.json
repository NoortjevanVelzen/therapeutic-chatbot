{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20184080\\\\OneDrive - TU Eindhoven\\\\Documents\\\\2. Industrial Design\\\\Final Master Project\\\\therapeutic-chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from \"react\";\nimport HomePage from \"./components/HomePage\";\nimport ChatbotScreen from \"./components/ChatbotScreen\";\nimport SocialMediaFeed from \"./components/SocialMediaScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // `stage` determines which screen to show: \"home\" → \"chat\" → \"feed\"\n  const [stage, setStage] = useState(\"home\");\n  // We'll capture the final mood returned by ChatbotScreen\n  const [finalMood, setFinalMood] = useState(\"\");\n\n  // 1) HOME SCREEN\n  if (stage === \"home\") {\n    return /*#__PURE__*/_jsxDEV(HomePage, {\n      onGetStarted: () => setStage(\"chat\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 2) CHATBOT SCREEN\n  if (stage === \"chat\") {\n    return /*#__PURE__*/_jsxDEV(ChatbotScreen, {\n      onFinish: detectedMood => {\n        // Save the mood and move to the feed screen\n        setFinalMood(detectedMood || \"\");\n        setStage(\"feed\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 3) SOCIAL MEDIA FEED\n  // We pass the detected mood into SocialMediaFeed as `userInput`\n  if (stage === \"feed\") {\n    return /*#__PURE__*/_jsxDEV(SocialMediaFeed, {\n      userInput: finalMood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return null;\n}\n_s(App, \"YPFYe2Kz4eRgs3S6REPumX1e12Y=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","HomePage","ChatbotScreen","SocialMediaFeed","jsxDEV","_jsxDEV","App","_s","stage","setStage","finalMood","setFinalMood","onGetStarted","fileName","_jsxFileName","lineNumber","columnNumber","onFinish","detectedMood","userInput","_c","$RefreshReg$"],"sources":["C:/Users/20184080/OneDrive - TU Eindhoven/Documents/2. Industrial Design/Final Master Project/therapeutic-chatbot/frontend/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from \"react\";\nimport HomePage from \"./components/HomePage\";\nimport ChatbotScreen from \"./components/ChatbotScreen\";\nimport SocialMediaFeed from \"./components/SocialMediaScreen\";\n\nexport default function App() {\n  // `stage` determines which screen to show: \"home\" → \"chat\" → \"feed\"\n  const [stage, setStage] = useState(\"home\");\n  // We'll capture the final mood returned by ChatbotScreen\n  const [finalMood, setFinalMood] = useState(\"\");\n\n  // 1) HOME SCREEN\n  if (stage === \"home\") {\n    return <HomePage onGetStarted={() => setStage(\"chat\")} />;\n  }\n\n  // 2) CHATBOT SCREEN\n  if (stage === \"chat\") {\n    return (\n      <ChatbotScreen\n        onFinish={(detectedMood) => {\n          // Save the mood and move to the feed screen\n          setFinalMood(detectedMood || \"\");\n          setStage(\"feed\");\n        }}\n      />\n    );\n  }\n\n  // 3) SOCIAL MEDIA FEED\n  // We pass the detected mood into SocialMediaFeed as `userInput`\n  if (stage === \"feed\") {\n    return <SocialMediaFeed userInput={finalMood} />;\n  }\n\n  return null;\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,eAAe,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAC1C;EACA,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,IAAIQ,KAAK,KAAK,MAAM,EAAE;IACpB,oBAAOH,OAAA,CAACJ,QAAQ;MAACW,YAAY,EAAEA,CAAA,KAAMH,QAAQ,CAAC,MAAM;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3D;;EAEA;EACA,IAAIR,KAAK,KAAK,MAAM,EAAE;IACpB,oBACEH,OAAA,CAACH,aAAa;MACZe,QAAQ,EAAGC,YAAY,IAAK;QAC1B;QACAP,YAAY,CAACO,YAAY,IAAI,EAAE,CAAC;QAChCT,QAAQ,CAAC,MAAM,CAAC;MAClB;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEN;;EAEA;EACA;EACA,IAAIR,KAAK,KAAK,MAAM,EAAE;IACpB,oBAAOH,OAAA,CAACF,eAAe;MAACgB,SAAS,EAAET;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClD;EAEA,OAAO,IAAI;AACb;AAACT,EAAA,CA/BuBD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}