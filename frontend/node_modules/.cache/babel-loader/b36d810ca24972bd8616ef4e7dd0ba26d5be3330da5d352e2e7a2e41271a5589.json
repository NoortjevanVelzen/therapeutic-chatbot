{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20184080\\\\OneDrive - TU Eindhoven\\\\Documents\\\\2. Industrial Design\\\\Final Master Project\\\\therapeutic-chatbot\\\\frontend\\\\src\\\\components\\\\ChatbotScreen.js\",\n  _s = $RefreshSig$();\n// src/components/ChatbotScreen.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000\";\nfunction ChatbotScreen({\n  onFinish\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"assistant\",\n    content: \"Hi! How are you feeling today?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const userMessages = messages.filter(msg => msg.role === \"user\");\n  const canFinish = userMessages.length > 0;\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setError(null);\n    const newMessages = [...messages, {\n      role: \"user\",\n      content: input\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      const response = await axios.post(`${BACKEND_URL}/api/chat`, {\n        messages: newMessages\n      });\n      setMessages([...newMessages, {\n        role: \"assistant\",\n        content: response.data.reply\n      }]);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setMessages([...newMessages, {\n        role: \"assistant\",\n        content: \"Sorry, there was a problem. Please try again.\"\n      }]);\n      setError(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.error) || \"Server error\");\n    }\n    setLoading(false);\n  };\n  const handleFinish = async () => {\n    setLoading(true);\n    setError(null);\n    if (!canFinish) {\n      onFinish(\"neutral\");\n      setLoading(false);\n      return;\n    }\n    try {\n      var _response$data$mood;\n      const response = await axios.post(`${BACKEND_URL}/api/mood`, {\n        userMessages\n      });\n      const backendMood = ((_response$data$mood = response.data.mood) === null || _response$data$mood === void 0 ? void 0 : _response$data$mood.toLowerCase()) || \"neutral\";\n      onFinish(backendMood);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setError(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.error) || \"Server error\");\n      onFinish(\"neutral\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: \"50px auto\",\n      textAlign: \"left\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 20,\n        borderRadius: 10\n      },\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n          margin: \"10px 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: \"inline-block\",\n            background: msg.role === \"assistant\" ? \"#eee\" : \"#aee\",\n            borderRadius: 10,\n            padding: \"10px 16px\"\n          },\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n          style: {\n            width: \"73%\",\n            fontSize: 16,\n            padding: 8,\n            borderRadius: 5,\n            border: \"1px solid #ddd\"\n          },\n          placeholder: \"Type your feeling...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: {\n            fontSize: 16,\n            marginLeft: 8\n          },\n          disabled: loading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinish,\n        style: {\n          marginTop: 20,\n          fontSize: 16,\n          width: \"100%\",\n          background: \"#35b\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: 5,\n          padding: 10\n        },\n        disabled: loading || !canFinish,\n        children: loading ? \"Analyzing mood...\" : \"Finish Chat & Show Mood Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          marginTop: 10,\n          fontSize: 14\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotScreen, \"RaHlqyI9luFiG3hhJlQ2ExFVYQE=\");\n_c = ChatbotScreen;\nexport default ChatbotScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatbotScreen\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BACKEND_URL","ChatbotScreen","onFinish","_s","messages","setMessages","role","content","input","setInput","loading","setLoading","error","setError","userMessages","filter","msg","canFinish","length","sendMessage","trim","newMessages","response","post","data","reply","e","_e$response","_e$response$data","handleFinish","_response$data$mood","backendMood","mood","toLowerCase","_e$response2","_e$response2$data","style","maxWidth","margin","textAlign","children","border","padding","borderRadius","map","idx","display","background","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","value","onChange","target","onKeyDown","key","width","fontSize","placeholder","disabled","onClick","marginLeft","color","_c","$RefreshReg$"],"sources":["C:/Users/20184080/OneDrive - TU Eindhoven/Documents/2. Industrial Design/Final Master Project/therapeutic-chatbot/frontend/src/components/ChatbotScreen.js"],"sourcesContent":["// src/components/ChatbotScreen.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BACKEND_URL = \"http://localhost:5000\";\r\n\r\nfunction ChatbotScreen({ onFinish }) {\r\n  const [messages, setMessages] = useState([\r\n    { role: \"assistant\", content: \"Hi! How are you feeling today?\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const userMessages = messages.filter((msg) => msg.role === \"user\");\r\n  const canFinish = userMessages.length > 0;\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    setError(null);\r\n    const newMessages = [...messages, { role: \"user\", content: input }];\r\n    setMessages(newMessages);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(`${BACKEND_URL}/api/chat`, {\r\n        messages: newMessages,\r\n      });\r\n      setMessages([\r\n        ...newMessages,\r\n        { role: \"assistant\", content: response.data.reply },\r\n      ]);\r\n    } catch (e) {\r\n      setMessages([\r\n        ...newMessages,\r\n        {\r\n          role: \"assistant\",\r\n          content: \"Sorry, there was a problem. Please try again.\",\r\n        },\r\n      ]);\r\n      setError(\r\n        e.response?.data?.error || \"Server error\"\r\n      );\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!canFinish) {\r\n      onFinish(\"neutral\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`${BACKEND_URL}/api/mood`, { userMessages });\r\n      const backendMood = response.data.mood?.toLowerCase() || \"neutral\";\r\n      onFinish(backendMood);\r\n    } catch (e) {\r\n      setError(e.response?.data?.error || \"Server error\");\r\n      onFinish(\"neutral\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 400, margin: \"50px auto\", textAlign: \"left\" }}>\r\n      <div style={{ border: \"1px solid #ccc\", padding: 20, borderRadius: 10 }}>\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            style={{\r\n              textAlign: msg.role === \"user\" ? \"right\" : \"left\",\r\n              margin: \"10px 0\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                background: msg.role === \"assistant\" ? \"#eee\" : \"#aee\",\r\n                borderRadius: 10,\r\n                padding: \"10px 16px\",\r\n              }}\r\n            >\r\n              {msg.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n        <div style={{ marginTop: 20 }}>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n            style={{\r\n              width: \"73%\",\r\n              fontSize: 16,\r\n              padding: 8,\r\n              borderRadius: 5,\r\n              border: \"1px solid #ddd\",\r\n            }}\r\n            placeholder=\"Type your feeling...\"\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            style={{ fontSize: 16, marginLeft: 8 }}\r\n            disabled={loading || !input.trim()}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n        <button\r\n          onClick={handleFinish}\r\n          style={{\r\n            marginTop: 20,\r\n            fontSize: 16,\r\n            width: \"100%\",\r\n            background: \"#35b\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n            borderRadius: 5,\r\n            padding: 10,\r\n          }}\r\n          disabled={loading || !canFinish}\r\n        >\r\n          {loading ? \"Analyzing mood...\" : \"Finish Chat & Show Mood Feed\"}\r\n        </button>\r\n        {error && (\r\n          <div style={{ color: \"red\", marginTop: 10, fontSize: 14 }}>\r\n            {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatbotScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}