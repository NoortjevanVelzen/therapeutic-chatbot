{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20184080\\\\OneDrive - TU Eindhoven\\\\Documents\\\\2. Industrial Design\\\\Final Master Project\\\\therapeutic-chatbot\\\\frontend\\\\src\\\\components\\\\SocialMediaScreen.js\",\n  _s = $RefreshSig$();\n// src/components/SocialMediaScreen.js\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000\";\n\n// Dynamically generates a prompt for any mood\nfunction generatePromptForMood(mood) {\n  if (!mood || typeof mood !== \"string\" || mood.trim() === \"\") {\n    mood = \"neutral\";\n  }\n  return `Create a square stick-figure illustration to balance the mood “${mood}”: \n\n- **Negative (anxious, sad, angry, overwhelmed):**  \n  • Show one distressed figure and one calming figure (e.g., slumped on a hill with a helping hand and sun rays; tense with jagged lines and calm with an open hand and a ripple; curled inside a frame with someone offering a flower; scribbled amid chaos with a candle held by another).\n\n- **Positive (happy, hopeful, loving):**  \n  • Show figures sharing warmth (e.g., jumping under string lights; reaching toward a sunrise with a friend behind; exchanging a flower with simple hearts or curves).\n\n- **Neutral/Contemplative:**  \n  • Single figure peacefully seated facing a plain sun or plant.\n\n**Requirements:**  \n• Use varied line weight to emphasize emotion.  \n• Include one simple symbol (flower, candle, sunrise, ripple).  \n• Keep background minimal.  \n• Optional: one muted color accent.  \n• No text.\n `;\n}\nfunction SocialMediaScreen({\n  mood\n}) {\n  _s();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // For debugging: see what mood is coming in\n  useEffect(() => {\n    console.log(\"Received mood from backend:\", mood);\n  }, [mood]);\n  useEffect(() => {\n    async function fetchImages() {\n      setLoading(true);\n      setError(null);\n      setImages([]);\n      const prompt = generatePromptForMood(mood);\n      try {\n        const response = await axios.post(`${BACKEND_URL}/api/generate-image`, {\n          prompt\n        });\n        setImages(response.data.images || []);\n      } catch (e) {\n        setImages([]);\n        setError(e.response && e.response.data && e.response.data.error ? e.response.data.error : \"Image generation failed.\");\n      }\n      setLoading(false);\n    }\n    fetchImages();\n  }, [mood]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"50px auto\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 32,\n        padding: \"18px 30px\",\n        background: \"#f3f7ff\",\n        borderRadius: 12,\n        border: \"1px solid #dbeafe\",\n        fontSize: 20,\n        color: \"#183153\",\n        textAlign: \"center\",\n        boxShadow: \"0 2px 8px #0001\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 500,\n          fontSize: 22,\n          color: \"#375bb6\"\n        },\n        children: \"Mood detected:\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 700,\n          fontSize: 22,\n          textTransform: \"capitalize\"\n        },\n        children: mood || \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12,\n          fontSize: 17\n        },\n        children: \"The feed below is generated by AI to visually reflect your mood.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Social Mood Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        margin: 16\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Generating images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        gap: 20\n      },\n      children: images.length > 0 ? images.map((img, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          borderRadius: 10,\n          padding: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: `mood img ${idx}`,\n          style: {\n            width: 200,\n            height: 200,\n            objectFit: \"cover\",\n            borderRadius: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#666\"\n        },\n        children: \"No images generated.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(SocialMediaScreen, \"ypDxYvnNl+Nee6GODvfe6+OAXeY=\");\n_c = SocialMediaScreen;\nexport default SocialMediaScreen;\nvar _c;\n$RefreshReg$(_c, \"SocialMediaScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BACKEND_URL","generatePromptForMood","mood","trim","SocialMediaScreen","_s","images","setImages","loading","setLoading","error","setError","console","log","fetchImages","prompt","response","post","data","e","style","maxWidth","margin","textAlign","children","marginBottom","padding","background","borderRadius","border","fontSize","color","boxShadow","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","textTransform","marginTop","display","justifyContent","flexWrap","gap","length","map","img","idx","src","alt","width","height","objectFit","_c","$RefreshReg$"],"sources":["C:/Users/20184080/OneDrive - TU Eindhoven/Documents/2. Industrial Design/Final Master Project/therapeutic-chatbot/frontend/src/components/SocialMediaScreen.js"],"sourcesContent":["// src/components/SocialMediaScreen.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BACKEND_URL = \"http://localhost:5000\";\r\n\r\n// Dynamically generates a prompt for any mood\r\nfunction generatePromptForMood(mood) {\r\n  if (!mood || typeof mood !== \"string\" || mood.trim() === \"\") {\r\n    mood = \"neutral\";\r\n  }\r\n  return `Create a square stick-figure illustration to balance the mood “${mood}”: \r\n\r\n- **Negative (anxious, sad, angry, overwhelmed):**  \r\n  • Show one distressed figure and one calming figure (e.g., slumped on a hill with a helping hand and sun rays; tense with jagged lines and calm with an open hand and a ripple; curled inside a frame with someone offering a flower; scribbled amid chaos with a candle held by another).\r\n\r\n- **Positive (happy, hopeful, loving):**  \r\n  • Show figures sharing warmth (e.g., jumping under string lights; reaching toward a sunrise with a friend behind; exchanging a flower with simple hearts or curves).\r\n\r\n- **Neutral/Contemplative:**  \r\n  • Single figure peacefully seated facing a plain sun or plant.\r\n\r\n**Requirements:**  \r\n• Use varied line weight to emphasize emotion.  \r\n• Include one simple symbol (flower, candle, sunrise, ripple).  \r\n• Keep background minimal.  \r\n• Optional: one muted color accent.  \r\n• No text.\r\n `;\r\n}\r\n\r\nfunction SocialMediaScreen({ mood }) {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // For debugging: see what mood is coming in\r\n  useEffect(() => {\r\n    console.log(\"Received mood from backend:\", mood);\r\n  }, [mood]);\r\n\r\n  useEffect(() => {\r\n    async function fetchImages() {\r\n      setLoading(true);\r\n      setError(null);\r\n      setImages([]);\r\n      const prompt = generatePromptForMood(mood);\r\n      try {\r\n        const response = await axios.post(`${BACKEND_URL}/api/generate-image`, {\r\n          prompt,\r\n        });\r\n        setImages(response.data.images || []);\r\n      } catch (e) {\r\n        setImages([]);\r\n        setError(\r\n          e.response && e.response.data && e.response.data.error\r\n            ? e.response.data.error\r\n            : \"Image generation failed.\"\r\n        );\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchImages();\r\n  }, [mood]);\r\n\r\n  return (\r\n    <div style={{ maxWidth: 700, margin: \"50px auto\", textAlign: \"center\" }}>\r\n      <div\r\n        style={{\r\n          marginBottom: 32,\r\n          padding: \"18px 30px\",\r\n          background: \"#f3f7ff\",\r\n          borderRadius: 12,\r\n          border: \"1px solid #dbeafe\",\r\n          fontSize: 20,\r\n          color: \"#183153\",\r\n          textAlign: \"center\",\r\n          boxShadow: \"0 2px 8px #0001\",\r\n        }}\r\n      >\r\n        <span style={{ fontWeight: 500, fontSize: 22, color: \"#375bb6\" }}>\r\n          Mood detected:&nbsp;\r\n        </span>\r\n        <span style={{ fontWeight: 700, fontSize: 22, textTransform: \"capitalize\" }}>\r\n          {mood || \"neutral\"}\r\n        </span>\r\n        <div style={{ marginTop: 12, fontSize: 17 }}>\r\n          The feed below is generated by AI to visually reflect your mood.\r\n        </div>\r\n      </div>\r\n      <h2>Social Mood Feed</h2>\r\n      {error && (\r\n        <div style={{ color: \"red\", margin: 16 }}>{error}</div>\r\n      )}\r\n      {loading ? (\r\n        <p>Generating images...</p>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexWrap: \"wrap\",\r\n            gap: 20,\r\n          }}\r\n        >\r\n          {images.length > 0 ? (\r\n            images.map((img, idx) => (\r\n              <div\r\n                key={idx}\r\n                style={{\r\n                  border: \"1px solid #ddd\",\r\n                  borderRadius: 10,\r\n                  padding: 10,\r\n                }}\r\n              >\r\n                <img\r\n                  src={img}\r\n                  alt={`mood img ${idx}`}\r\n                  style={{\r\n                    width: 200,\r\n                    height: 200,\r\n                    objectFit: \"cover\",\r\n                    borderRadius: 10,\r\n                  }}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div style={{ color: \"#666\" }}>No images generated.</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SocialMediaScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}