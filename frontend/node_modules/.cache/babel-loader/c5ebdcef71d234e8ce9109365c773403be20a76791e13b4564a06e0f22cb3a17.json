{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20184080\\\\OneDrive - TU Eindhoven\\\\Documents\\\\2. Industrial Design\\\\Final Master Project\\\\therapeutic-chatbot\\\\frontend\\\\src\\\\components\\\\SocialMediaScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000\";\nexport default function SocialMediaFeed({\n  userInput\n}) {\n  _s();\n  const [feed, setFeed] = useState([]); // {prompt, image}\n  const [mood, setMood] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Step 1: Extract mood from user input\n  async function detectMood(text) {\n    try {\n      const res = await axios.post(`${BACKEND_URL}/api/extract-mood`, {\n        text\n      });\n      return res.data.mood;\n    } catch (e) {\n      return \"neutral\";\n    }\n  }\n\n  // Step 2: Generate creative prompt for that mood\n  async function getPrompt(mood) {\n    const res = await axios.post(`${BACKEND_URL}/api/generate-prompt`, {\n      mood\n    });\n    return res.data.prompt;\n  }\n\n  // Step 3: Generate image from that prompt\n  async function getImage(prompt) {\n    const res = await axios.post(`${BACKEND_URL}/api/generate-image`, {\n      prompt\n    });\n    return res.data.images[0];\n  }\n\n  // Generate the feed (1 post, can repeat for more)\n  async function handleGenerateFeed() {\n    setLoading(true);\n    setError(null);\n    setFeed([]);\n    try {\n      // 1. Extract mood from user input (or use passed-in mood)\n      const extractedMood = userInput ? await detectMood(userInput) : \"neutral\";\n      setMood(extractedMood);\n\n      // 2. Generate prompt\n      const prompt = await getPrompt(extractedMood);\n\n      // 3. Generate image\n      const image = await getImage(prompt);\n      setFeed([{\n        prompt,\n        image\n      }]);\n    } catch (e) {\n      setError(\"Failed to generate feed. Try again.\");\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"40px auto\",\n      padding: 24,\n      background: \"#fafafa\",\n      borderRadius: 16,\n      boxShadow: \"0 3px 12px rgba(0,0,0,0.08)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20\n      },\n      children: \"Social Mood Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateFeed,\n      disabled: loading,\n      style: {\n        background: \"#333\",\n        color: \"#fff\",\n        fontSize: 18,\n        border: \"none\",\n        borderRadius: 8,\n        padding: \"12px 24px\",\n        margin: \"0 auto 30px auto\",\n        display: \"block\",\n        cursor: loading ? \"wait\" : \"pointer\"\n      },\n      children: loading ? \"Generating...\" : \"Generate Mood Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        margin: 16\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), mood && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 12\n      },\n      children: [\"Detected mood: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: mood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this), feed.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"24px\"\n      },\n      children: feed.map((post, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          borderRadius: 12,\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.07)\",\n          padding: 18,\n          width: 350\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: \"Mood post\",\n          style: {\n            width: \"100%\",\n            borderRadius: 10,\n            objectFit: \"cover\",\n            aspectRatio: \"1/1\",\n            marginBottom: 14\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"#222\",\n            fontWeight: 500,\n            fontSize: 16,\n            marginBottom: 8\n          },\n          children: post.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"#999\",\n            fontSize: 13\n          },\n          children: [\"#\", mood, \"vibes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(SocialMediaFeed, \"rqW8pz0+UfPkBUmx5Bq1ZVyLRH0=\");\n_c = SocialMediaFeed;\nvar _c;\n$RefreshReg$(_c, \"SocialMediaFeed\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BACKEND_URL","SocialMediaFeed","userInput","_s","feed","setFeed","mood","setMood","loading","setLoading","error","setError","detectMood","text","res","post","data","e","getPrompt","prompt","getImage","images","handleGenerateFeed","extractedMood","image","style","maxWidth","margin","padding","background","borderRadius","boxShadow","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","color","fontSize","border","display","cursor","length","flexDirection","alignItems","gap","map","idx","width","src","alt","objectFit","aspectRatio","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/20184080/OneDrive - TU Eindhoven/Documents/2. Industrial Design/Final Master Project/therapeutic-chatbot/frontend/src/components/SocialMediaScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BACKEND_URL = \"http://localhost:5000\";\r\n\r\nexport default function SocialMediaFeed({ userInput }) {\r\n  const [feed, setFeed] = useState([]); // {prompt, image}\r\n  const [mood, setMood] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Step 1: Extract mood from user input\r\n  async function detectMood(text) {\r\n    try {\r\n      const res = await axios.post(`${BACKEND_URL}/api/extract-mood`, { text });\r\n      return res.data.mood;\r\n    } catch (e) {\r\n      return \"neutral\";\r\n    }\r\n  }\r\n\r\n  // Step 2: Generate creative prompt for that mood\r\n  async function getPrompt(mood) {\r\n    const res = await axios.post(`${BACKEND_URL}/api/generate-prompt`, { mood });\r\n    return res.data.prompt;\r\n  }\r\n\r\n  // Step 3: Generate image from that prompt\r\n  async function getImage(prompt) {\r\n    const res = await axios.post(`${BACKEND_URL}/api/generate-image`, { prompt });\r\n    return res.data.images[0];\r\n  }\r\n\r\n  // Generate the feed (1 post, can repeat for more)\r\n  async function handleGenerateFeed() {\r\n    setLoading(true);\r\n    setError(null);\r\n    setFeed([]);\r\n    try {\r\n      // 1. Extract mood from user input (or use passed-in mood)\r\n      const extractedMood = userInput ? await detectMood(userInput) : \"neutral\";\r\n      setMood(extractedMood);\r\n\r\n      // 2. Generate prompt\r\n      const prompt = await getPrompt(extractedMood);\r\n\r\n      // 3. Generate image\r\n      const image = await getImage(prompt);\r\n\r\n      setFeed([{ prompt, image }]);\r\n    } catch (e) {\r\n      setError(\"Failed to generate feed. Try again.\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      maxWidth: 600,\r\n      margin: \"40px auto\",\r\n      padding: 24,\r\n      background: \"#fafafa\",\r\n      borderRadius: 16,\r\n      boxShadow: \"0 3px 12px rgba(0,0,0,0.08)\"\r\n    }}>\r\n      <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n        Social Mood Feed\r\n      </h2>\r\n      <button\r\n        onClick={handleGenerateFeed}\r\n        disabled={loading}\r\n        style={{\r\n          background: \"#333\",\r\n          color: \"#fff\",\r\n          fontSize: 18,\r\n          border: \"none\",\r\n          borderRadius: 8,\r\n          padding: \"12px 24px\",\r\n          margin: \"0 auto 30px auto\",\r\n          display: \"block\",\r\n          cursor: loading ? \"wait\" : \"pointer\"\r\n        }}\r\n      >\r\n        {loading ? \"Generating...\" : \"Generate Mood Feed\"}\r\n      </button>\r\n      {error && <div style={{ color: \"red\", margin: 16 }}>{error}</div>}\r\n      {mood && <div style={{ textAlign: \"center\", marginBottom: 12 }}>Detected mood: <b>{mood}</b></div>}\r\n      {feed.length > 0 && (\r\n        <div style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          gap: \"24px\"\r\n        }}>\r\n          {feed.map((post, idx) => (\r\n            <div key={idx} style={{\r\n              background: \"#fff\",\r\n              borderRadius: 12,\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.07)\",\r\n              padding: 18,\r\n              width: 350\r\n            }}>\r\n              <img\r\n                src={post.image}\r\n                alt=\"Mood post\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 10,\r\n                  objectFit: \"cover\",\r\n                  aspectRatio: \"1/1\",\r\n                  marginBottom: 14\r\n                }}\r\n              />\r\n              <div style={{ color: \"#222\", fontWeight: 500, fontSize: 16, marginBottom: 8 }}>\r\n                {post.prompt}\r\n              </div>\r\n              <div style={{ color: \"#999\", fontSize: 13 }}>\r\n                #{mood}vibes\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}