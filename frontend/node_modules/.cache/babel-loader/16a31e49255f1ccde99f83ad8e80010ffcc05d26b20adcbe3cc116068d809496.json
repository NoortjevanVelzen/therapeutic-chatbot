{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20184080\\\\OneDrive - TU Eindhoven\\\\Documents\\\\2. Industrial Design\\\\Final Master Project\\\\therapeutic-chatbot\\\\frontend\\\\src\\\\components\\\\SocialMediaScreen.js\",\n  _s = $RefreshSig$();\n// src/components/SocialMediaScreen.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:5000\"; // adjust if your server runs elsewhere\n\n/**\r\n * -------------------------------------------------------------\r\n *  DEFAULT EXPORT: SocialMediaScreen\r\n *\r\n *  - Receives `userInput` (a single-word mood string) as a prop.\r\n *  - Displays “Mood detected: <mood>” in a header banner.\r\n *  - Renders <SocialMediaFeed mood={userInput} /> below.\r\n * -------------------------------------------------------------\r\n */\nexport default function SocialMediaScreen({\n  userInput\n}) {\n  // The parent (ChatbotScreen → App.js) has already called /api/mood\n  // and is supplying a single-word string (e.g. \"stressed\", \"happy\", etc.).\n  const mood = (userInput === null || userInput === void 0 ? void 0 : userInput.trim().toLowerCase()) || \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"0 auto\",\n      padding: \"40px 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 30,\n        padding: \"20px 28px\",\n        background: \"#eaf2fc\",\n        borderRadius: 10,\n        border: \"1px solid #cfe0fc\",\n        textAlign: \"center\",\n        boxShadow: \"0 2px 6px rgba(0,0,0,0.08)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 24,\n          fontWeight: 500,\n          color: \"#2f5597\"\n        },\n        children: \"Mood detected:\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 24,\n          fontWeight: 700,\n          color: \"#1b3a93\",\n          textTransform: \"capitalize\"\n        },\n        children: mood || \"—\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialMediaFeed, {\n      mood: mood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n/**\r\n * -------------------------------------------------------------\r\n *  NAMED EXPORT: SocialMediaFeed\r\n *\r\n *  - Takes in `mood` (a single word: e.g. \"stressed\").\r\n *  - Builds a DALL·E prompt like “A beautiful illustration that\r\n *    conveys a <mood> mood.”\r\n *  - Calls POST /api/generate-image with { prompt }.\r\n *  - Displays the returned image once it arrives.\r\n * -------------------------------------------------------------\r\n */\n_c = SocialMediaScreen;\nexport function SocialMediaFeed({\n  mood\n}) {\n  _s();\n  const [postImageUrl, setPostImageUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  /** \r\n   * Returns a simple DALL·E prompt based on the mood.\r\n   * If no mood is passed (empty string), default to a “neutral” prompt.\r\n   */\n  function buildPromptFromMood(mood) {\n    if (!mood) {\n      return \"An abstract illustration capturing a neutral mood.\";\n    }\n    return `A beautiful illustration that conveys a ${mood} mood.`;\n  }\n\n  /**\r\n   * Calls POST /api/generate-image with { prompt }.\r\n   * The server responds with { images: [\"<url>\"] }.\r\n   */\n  async function generateImageFromPrompt(prompt) {\n    const res = await axios.post(`${BACKEND_URL}/api/generate-image`, {\n      prompt\n    });\n    return res.data.images[0];\n  }\n  const handleGenerateFeed = async () => {\n    if (!mood) {\n      setError(\"No mood detected yet.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setPostImageUrl(null);\n    try {\n      // 1) Build the DALL·E prompt:\n      const prompt = buildPromptFromMood(mood);\n\n      // 2) Send { prompt } to the backend:\n      const imageUrl = await generateImageFromPrompt(prompt);\n\n      // 3) Display the image:\n      setPostImageUrl(imageUrl);\n    } catch (e) {\n      var _e$response;\n      console.error(\"Error generating image:\", ((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data) || e.message);\n      setError(\"Failed to generate image. Please try again.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 650,\n      margin: \"0 auto\",\n      padding: 24,\n      background: \"#fafafa\",\n      borderRadius: 12,\n      boxShadow: \"0 3px 12px rgba(0,0,0,0.08)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 18,\n        color: \"#333\"\n      },\n      children: \"Social Mood Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateFeed,\n      disabled: loading,\n      style: {\n        display: \"block\",\n        margin: \"0 auto 24px auto\",\n        background: \"#333\",\n        color: \"#fff\",\n        fontSize: 18,\n        padding: \"10px 22px\",\n        border: \"none\",\n        borderRadius: 8,\n        cursor: loading ? \"wait\" : \"pointer\",\n        boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\"\n      },\n      children: loading ? \"Generating...\" : \"Generate Mood Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: 20,\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), postImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#fff\",\n        borderRadius: 10,\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"12px 16px\",\n          borderBottom: \"1px solid #eee\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 36,\n            height: 36,\n            borderRadius: \"50%\",\n            backgroundImage: `url(\"https://i.pravatar.cc/150?img=12\")`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            marginRight: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 600,\n            fontSize: 16\n          },\n          children: \"AI_Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: postImageUrl,\n        alt: \"AI generated mood illustration\",\n        style: {\n          width: \"100%\",\n          display: \"block\",\n          objectFit: \"cover\",\n          maxHeight: 500\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"8px 16px\",\n          gap: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"like\",\n          style: {\n            fontSize: 24,\n            cursor: \"pointer\"\n          },\n          children: \"\\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"comment\",\n          style: {\n            fontSize: 24,\n            cursor: \"pointer\"\n          },\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"share\",\n          style: {\n            fontSize: 24,\n            cursor: \"pointer\"\n          },\n          children: \"\\uD83D\\uDCE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"0 16px 16px 16px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 600,\n            marginRight: 8\n          },\n          children: \"AI_Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#333\"\n          },\n          children: buildPromptFromMood(mood)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8,\n            color: \"#999\",\n            fontSize: 14\n          },\n          children: [\"#\", mood, \"vibes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(SocialMediaFeed, \"aHsovgvcW0aWX5G4EGAWPekvYtU=\");\n_c2 = SocialMediaFeed;\nvar _c, _c2;\n$RefreshReg$(_c, \"SocialMediaScreen\");\n$RefreshReg$(_c2, \"SocialMediaFeed\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BACKEND_URL","SocialMediaScreen","userInput","mood","trim","toLowerCase","style","maxWidth","margin","padding","children","marginBottom","background","borderRadius","border","textAlign","boxShadow","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","textTransform","SocialMediaFeed","_c","_s","postImageUrl","setPostImageUrl","loading","setLoading","error","setError","buildPromptFromMood","generateImageFromPrompt","prompt","res","post","data","images","handleGenerateFeed","imageUrl","e","_e$response","console","response","message","onClick","disabled","display","cursor","overflow","alignItems","borderBottom","width","height","backgroundImage","backgroundSize","backgroundPosition","marginRight","src","alt","objectFit","maxHeight","gap","role","marginTop","_c2","$RefreshReg$"],"sources":["C:/Users/20184080/OneDrive - TU Eindhoven/Documents/2. Industrial Design/Final Master Project/therapeutic-chatbot/frontend/src/components/SocialMediaScreen.js"],"sourcesContent":["// src/components/SocialMediaScreen.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BACKEND_URL = \"http://localhost:5000\"; // adjust if your server runs elsewhere\r\n\r\n/**\r\n * -------------------------------------------------------------\r\n *  DEFAULT EXPORT: SocialMediaScreen\r\n *\r\n *  - Receives `userInput` (a single-word mood string) as a prop.\r\n *  - Displays “Mood detected: <mood>” in a header banner.\r\n *  - Renders <SocialMediaFeed mood={userInput} /> below.\r\n * -------------------------------------------------------------\r\n */\r\nexport default function SocialMediaScreen({ userInput }) {\r\n  // The parent (ChatbotScreen → App.js) has already called /api/mood\r\n  // and is supplying a single-word string (e.g. \"stressed\", \"happy\", etc.).\r\n  const mood = userInput?.trim().toLowerCase() || \"\";\r\n\r\n  return (\r\n    <div style={{ maxWidth: 700, margin: \"0 auto\", padding: \"40px 0\" }}>\r\n      {/* ─── Header / Banner ─── */}\r\n      <div\r\n        style={{\r\n          marginBottom: 30,\r\n          padding: \"20px 28px\",\r\n          background: \"#eaf2fc\",\r\n          borderRadius: 10,\r\n          border: \"1px solid #cfe0fc\",\r\n          textAlign: \"center\",\r\n          boxShadow: \"0 2px 6px rgba(0,0,0,0.08)\",\r\n        }}\r\n      >\r\n        <span style={{ fontSize: 24, fontWeight: 500, color: \"#2f5597\" }}>\r\n          Mood detected:&nbsp;\r\n        </span>\r\n        <span\r\n          style={{\r\n            fontSize: 24,\r\n            fontWeight: 700,\r\n            color: \"#1b3a93\",\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {mood || \"—\"}\r\n        </span>\r\n      </div>\r\n\r\n      {/* ─── Feed Component ─── */}\r\n      <SocialMediaFeed mood={mood} />\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * -------------------------------------------------------------\r\n *  NAMED EXPORT: SocialMediaFeed\r\n *\r\n *  - Takes in `mood` (a single word: e.g. \"stressed\").\r\n *  - Builds a DALL·E prompt like “A beautiful illustration that\r\n *    conveys a <mood> mood.”\r\n *  - Calls POST /api/generate-image with { prompt }.\r\n *  - Displays the returned image once it arrives.\r\n * -------------------------------------------------------------\r\n */\r\nexport function SocialMediaFeed({ mood }) {\r\n  const [postImageUrl, setPostImageUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  /** \r\n   * Returns a simple DALL·E prompt based on the mood.\r\n   * If no mood is passed (empty string), default to a “neutral” prompt.\r\n   */\r\n  function buildPromptFromMood(mood) {\r\n    if (!mood) {\r\n      return \"An abstract illustration capturing a neutral mood.\";\r\n    }\r\n    return `A beautiful illustration that conveys a ${mood} mood.`;\r\n  }\r\n\r\n  /**\r\n   * Calls POST /api/generate-image with { prompt }.\r\n   * The server responds with { images: [\"<url>\"] }.\r\n   */\r\n  async function generateImageFromPrompt(prompt) {\r\n    const res = await axios.post(\r\n      `${BACKEND_URL}/api/generate-image`,\r\n      { prompt }\r\n    );\r\n    return res.data.images[0];\r\n  }\r\n\r\n  const handleGenerateFeed = async () => {\r\n    if (!mood) {\r\n      setError(\"No mood detected yet.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setPostImageUrl(null);\r\n\r\n    try {\r\n      // 1) Build the DALL·E prompt:\r\n      const prompt = buildPromptFromMood(mood);\r\n\r\n      // 2) Send { prompt } to the backend:\r\n      const imageUrl = await generateImageFromPrompt(prompt);\r\n\r\n      // 3) Display the image:\r\n      setPostImageUrl(imageUrl);\r\n    } catch (e) {\r\n      console.error(\"Error generating image:\", e.response?.data || e.message);\r\n      setError(\"Failed to generate image. Please try again.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: 650,\r\n        margin: \"0 auto\",\r\n        padding: 24,\r\n        background: \"#fafafa\",\r\n        borderRadius: 12,\r\n        boxShadow: \"0 3px 12px rgba(0,0,0,0.08)\",\r\n      }}\r\n    >\r\n      <h2 style={{ textAlign: \"center\", marginBottom: 18, color: \"#333\" }}>\r\n        Social Mood Feed\r\n      </h2>\r\n\r\n      <button\r\n        onClick={handleGenerateFeed}\r\n        disabled={loading}\r\n        style={{\r\n          display: \"block\",\r\n          margin: \"0 auto 24px auto\",\r\n          background: \"#333\",\r\n          color: \"#fff\",\r\n          fontSize: 18,\r\n          padding: \"10px 22px\",\r\n          border: \"none\",\r\n          borderRadius: 8,\r\n          cursor: loading ? \"wait\" : \"pointer\",\r\n          boxShadow: \"0 2px 6px rgba(0,0,0,0.15)\",\r\n        }}\r\n      >\r\n        {loading ? \"Generating...\" : \"Generate Mood Feed\"}\r\n      </button>\r\n\r\n      {error && (\r\n        <div style={{ color: \"red\", marginBottom: 20, textAlign: \"center\" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {postImageUrl && (\r\n        <div\r\n          style={{\r\n            background: \"#fff\",\r\n            borderRadius: 10,\r\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          {/* ─── Post Header (Avatar + Username) ─── */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"12px 16px\",\r\n              borderBottom: \"1px solid #eee\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: 36,\r\n                height: 36,\r\n                borderRadius: \"50%\",\r\n                backgroundImage: `url(\"https://i.pravatar.cc/150?img=12\")`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                marginRight: 12,\r\n              }}\r\n            />\r\n            <span style={{ fontWeight: 600, fontSize: 16 }}>AI_Generator</span>\r\n          </div>\r\n\r\n          {/* ─── AI-Generated Image ─── */}\r\n          <img\r\n            src={postImageUrl}\r\n            alt=\"AI generated mood illustration\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"block\",\r\n              objectFit: \"cover\",\r\n              maxHeight: 500,\r\n            }}\r\n          />\r\n\r\n          {/* ─── Icon Bar (Like / Comment / Share) ─── */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"8px 16px\",\r\n              gap: 16,\r\n            }}\r\n          >\r\n            <span role=\"img\" aria-label=\"like\" style={{ fontSize: 24, cursor: \"pointer\" }}>\r\n              ❤️\r\n            </span>\r\n            <span role=\"img\" aria-label=\"comment\" style={{ fontSize: 24, cursor: \"pointer\" }}>\r\n              💬\r\n            </span>\r\n            <span role=\"img\" aria-label=\"share\" style={{ fontSize: 24, cursor: \"pointer\" }}>\r\n              📤\r\n            </span>\r\n          </div>\r\n\r\n          {/* ─── Caption (Using prompt text as the caption) ─── */}\r\n          <div style={{ padding: \"0 16px 16px 16px\" }}>\r\n            <span style={{ fontWeight: 600, marginRight: 8 }}>AI_Generator</span>\r\n            <span style={{ color: \"#333\" }}>{buildPromptFromMood(mood)}</span>\r\n            <div style={{ marginTop: 8, color: \"#999\", fontSize: 14 }}>\r\n              #{mood}vibes\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,uBAAuB,CAAC,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EACvD;EACA;EACA,MAAMC,IAAI,GAAG,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAI,EAAE;EAElD,oBACEN,OAAA;IAAKO,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAEjEX,OAAA;MACEO,KAAK,EAAE;QACLK,YAAY,EAAE,EAAE;QAChBF,OAAO,EAAE,WAAW;QACpBG,UAAU,EAAE,SAAS;QACrBC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE,mBAAmB;QAC3BC,SAAS,EAAE,QAAQ;QACnBC,SAAS,EAAE;MACb,CAAE;MAAAN,QAAA,gBAEFX,OAAA;QAAMO,KAAK,EAAE;UAAEW,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE,GAAG;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAT,QAAA,EAAC;MAElE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPxB,OAAA;QACEO,KAAK,EAAE;UACLW,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,GAAG;UACfC,KAAK,EAAE,SAAS;UAChBK,aAAa,EAAE;QACjB,CAAE;QAAAd,QAAA,EAEDP,IAAI,IAAI;MAAG;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNxB,OAAA,CAAC0B,eAAe;MAACtB,IAAI,EAAEA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVAG,EAAA,GAxCwBzB,iBAAiB;AAmDzC,OAAO,SAASwB,eAAeA,CAAC;EAAEtB;AAAK,CAAC,EAAE;EAAAwB,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;;EAExC;AACF;AACA;AACA;EACE,SAASsC,mBAAmBA,CAAC/B,IAAI,EAAE;IACjC,IAAI,CAACA,IAAI,EAAE;MACT,OAAO,oDAAoD;IAC7D;IACA,OAAO,2CAA2CA,IAAI,QAAQ;EAChE;;EAEA;AACF;AACA;AACA;EACE,eAAegC,uBAAuBA,CAACC,MAAM,EAAE;IAC7C,MAAMC,GAAG,GAAG,MAAMxC,KAAK,CAACyC,IAAI,CAC1B,GAAGtC,WAAW,qBAAqB,EACnC;MAAEoC;IAAO,CACX,CAAC;IACD,OAAOC,GAAG,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC3B;EAEA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACtC,IAAI,EAAE;MACT8B,QAAQ,CAAC,uBAAuB,CAAC;MACjC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdJ,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF;MACA,MAAMO,MAAM,GAAGF,mBAAmB,CAAC/B,IAAI,CAAC;;MAExC;MACA,MAAMuC,QAAQ,GAAG,MAAMP,uBAAuB,CAACC,MAAM,CAAC;;MAEtD;MACAP,eAAe,CAACa,QAAQ,CAAC;IAC3B,CAAC,CAAC,OAAOC,CAAC,EAAE;MAAA,IAAAC,WAAA;MACVC,OAAO,CAACb,KAAK,CAAC,yBAAyB,EAAE,EAAAY,WAAA,GAAAD,CAAC,CAACG,QAAQ,cAAAF,WAAA,uBAAVA,WAAA,CAAYL,IAAI,KAAII,CAAC,CAACI,OAAO,CAAC;MACvEd,QAAQ,CAAC,6CAA6C,CAAC;IACzD;IAEAF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEhC,OAAA;IACEO,KAAK,EAAE;MACLC,QAAQ,EAAE,GAAG;MACbC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,EAAE;MACXG,UAAU,EAAE,SAAS;MACrBC,YAAY,EAAE,EAAE;MAChBG,SAAS,EAAE;IACb,CAAE;IAAAN,QAAA,gBAEFX,OAAA;MAAIO,KAAK,EAAE;QAAES,SAAS,EAAE,QAAQ;QAAEJ,YAAY,EAAE,EAAE;QAAEQ,KAAK,EAAE;MAAO,CAAE;MAAAT,QAAA,EAAC;IAErE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELxB,OAAA;MACEiD,OAAO,EAAEP,kBAAmB;MAC5BQ,QAAQ,EAAEnB,OAAQ;MAClBxB,KAAK,EAAE;QACL4C,OAAO,EAAE,OAAO;QAChB1C,MAAM,EAAE,kBAAkB;QAC1BI,UAAU,EAAE,MAAM;QAClBO,KAAK,EAAE,MAAM;QACbF,QAAQ,EAAE,EAAE;QACZR,OAAO,EAAE,WAAW;QACpBK,MAAM,EAAE,MAAM;QACdD,YAAY,EAAE,CAAC;QACfsC,MAAM,EAAErB,OAAO,GAAG,MAAM,GAAG,SAAS;QACpCd,SAAS,EAAE;MACb,CAAE;MAAAN,QAAA,EAEDoB,OAAO,GAAG,eAAe,GAAG;IAAoB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAERS,KAAK,iBACJjC,OAAA;MAAKO,KAAK,EAAE;QAAEa,KAAK,EAAE,KAAK;QAAER,YAAY,EAAE,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAL,QAAA,EACjEsB;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAK,YAAY,iBACX7B,OAAA;MACEO,KAAK,EAAE;QACLM,UAAU,EAAE,MAAM;QAClBC,YAAY,EAAE,EAAE;QAChBG,SAAS,EAAE,2BAA2B;QACtCoC,QAAQ,EAAE;MACZ,CAAE;MAAA1C,QAAA,gBAGFX,OAAA;QACEO,KAAK,EAAE;UACL4C,OAAO,EAAE,MAAM;UACfG,UAAU,EAAE,QAAQ;UACpB5C,OAAO,EAAE,WAAW;UACpB6C,YAAY,EAAE;QAChB,CAAE;QAAA5C,QAAA,gBAEFX,OAAA;UACEO,KAAK,EAAE;YACLiD,KAAK,EAAE,EAAE;YACTC,MAAM,EAAE,EAAE;YACV3C,YAAY,EAAE,KAAK;YACnB4C,eAAe,EAAE,yCAAyC;YAC1DC,cAAc,EAAE,OAAO;YACvBC,kBAAkB,EAAE,QAAQ;YAC5BC,WAAW,EAAE;UACf;QAAE;UAAAxC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFxB,OAAA;UAAMO,KAAK,EAAE;YAAEY,UAAU,EAAE,GAAG;YAAED,QAAQ,EAAE;UAAG,CAAE;UAAAP,QAAA,EAAC;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eAGNxB,OAAA;QACE8D,GAAG,EAAEjC,YAAa;QAClBkC,GAAG,EAAC,gCAAgC;QACpCxD,KAAK,EAAE;UACLiD,KAAK,EAAE,MAAM;UACbL,OAAO,EAAE,OAAO;UAChBa,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE;QACb;MAAE;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGFxB,OAAA;QACEO,KAAK,EAAE;UACL4C,OAAO,EAAE,MAAM;UACfG,UAAU,EAAE,QAAQ;UACpB5C,OAAO,EAAE,UAAU;UACnBwD,GAAG,EAAE;QACP,CAAE;QAAAvD,QAAA,gBAEFX,OAAA;UAAMmE,IAAI,EAAC,KAAK;UAAC,cAAW,MAAM;UAAC5D,KAAK,EAAE;YAAEW,QAAQ,EAAE,EAAE;YAAEkC,MAAM,EAAE;UAAU,CAAE;UAAAzC,QAAA,EAAC;QAE/E;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPxB,OAAA;UAAMmE,IAAI,EAAC,KAAK;UAAC,cAAW,SAAS;UAAC5D,KAAK,EAAE;YAAEW,QAAQ,EAAE,EAAE;YAAEkC,MAAM,EAAE;UAAU,CAAE;UAAAzC,QAAA,EAAC;QAElF;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPxB,OAAA;UAAMmE,IAAI,EAAC,KAAK;UAAC,cAAW,OAAO;UAAC5D,KAAK,EAAE;YAAEW,QAAQ,EAAE,EAAE;YAAEkC,MAAM,EAAE;UAAU,CAAE;UAAAzC,QAAA,EAAC;QAEhF;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNxB,OAAA;QAAKO,KAAK,EAAE;UAAEG,OAAO,EAAE;QAAmB,CAAE;QAAAC,QAAA,gBAC1CX,OAAA;UAAMO,KAAK,EAAE;YAAEY,UAAU,EAAE,GAAG;YAAE0C,WAAW,EAAE;UAAE,CAAE;UAAAlD,QAAA,EAAC;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrExB,OAAA;UAAMO,KAAK,EAAE;YAAEa,KAAK,EAAE;UAAO,CAAE;UAAAT,QAAA,EAAEwB,mBAAmB,CAAC/B,IAAI;QAAC;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClExB,OAAA;UAAKO,KAAK,EAAE;YAAE6D,SAAS,EAAE,CAAC;YAAEhD,KAAK,EAAE,MAAM;YAAEF,QAAQ,EAAE;UAAG,CAAE;UAAAP,QAAA,GAAC,GACxD,EAACP,IAAI,EAAC,OACT;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACI,EAAA,CA3KeF,eAAe;AAAA2C,GAAA,GAAf3C,eAAe;AAAA,IAAAC,EAAA,EAAA0C,GAAA;AAAAC,YAAA,CAAA3C,EAAA;AAAA2C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}